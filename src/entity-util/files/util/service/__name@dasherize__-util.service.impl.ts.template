import {
    <%= classify(name) %>Entity,
    <%= classify(name) %>EntityAdd,
    <%= classify(name) %>EntityUpdate,
    <%= classify(name) %>UtilService,
} from '<%= apiPath %>/<%= dasherize(name) %>';

import { Injectable } from '@angular/core';
import { FormBuilder, FormGroup, Validators } from '@angular/forms';

@Injectable()
export class <%= classify(name) %>UtilServiceImpl extends <%= classify(name) %>UtilService {
    public _sort = (a: <%= classify(name) %>Entity, b: <%= classify(name) %>Entity): number =>
        a.name < b.name ? 1 : -1;

    public constructor(private formBuilder: FormBuilder) {
        super();
    }

    public createEntity(formGroup: FormGroup): <%= classify(name) %>EntityAdd {

        return {
            name: (formGroup.value['name'] as string).trim(),
            zip: formGroup.value['zip'],
        };
    }

    public createFormGroup(<%= camelize(name) %>: <%= classify(name) %>Entity | undefined): FormGroup {
        return this.formBuilder.group({
            zip: [<%= camelize(name) %>?.zip, Validators.required],
            name: [<%= camelize(name) %>?.name, Validators.required],
            id: [<%= camelize(name) %>?.id],
        });
    }

    public updateEntity(formGroup: FormGroup): <%= classify(name) %>EntityUpdate {

        return {
            name: formGroup.value['name'],
            zip: formGroup.value['zip'],
            id: formGroup.value['id'],
        };
    }
}
