import { Observable } from 'rxjs';

import { <%= classify(name) %>Entity, <%= classify(name) %>EntityAdd, <%= classify(name) %>EntityUpdate } from './<%= dasherize(name) %>';

export abstract class <%= classify(name) %>StateService {
    public abstract dispatchAddEntityAction(entity: <%= classify(name) %>EntityAdd): void;
    public abstract dispatchChangeNewEntityButtonEnabled(enabled: boolean): void;
    public abstract dispatchGetEntityAction(id: string): void;
    public abstract dispatchListEntitiesAction(): void;
    public abstract dispatchUpdateEntityAction(entity: <%= classify(name) %>EntityUpdate): void;
    public abstract selectEntity$(id: string): Observable<<%= classify(name) %>Entity | undefined>;
    public abstract selectEntityList$(): Observable<<%= classify(name) %>Entity[]>;
    public abstract selectNewEntityButtonEnabled$(): Observable<boolean>;
}
