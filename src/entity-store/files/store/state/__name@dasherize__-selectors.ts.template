import { <%= classify(name) %>Entity, USER_FEATURE_KEY } from '<%= apiPath %>/<%= dasherize(name) %>';

import { Dictionary } from '@ngrx/entity';
import { createFeatureSelector, createSelector } from '@ngrx/store';

//import { State, USER_FEATURE_KEY, <%= camelize(name) %>Adapter } from './<%= dasherize(name) %>.reducer';
import { State, <%= camelize(name) %>Adapter } from './<%= dasherize(name) %>.reducer';

export const get<%= classify(name) %>State = createFeatureSelector<State>(USER_FEATURE_KEY);

const { selectAll, selectEntities } = <%= camelize(name) %>Adapter.getSelectors();

export const get<%= classify(name) %>Loading = createSelector(
    get<%= classify(name) %>State,
    (state: State) => state.loading
);

export const get<%= classify(name) %>Error = createSelector(
    get<%= classify(name) %>State,
    (state: State) => state.error
);

export const getAll<%= classify(name) %> = createSelector(get<%= classify(name) %>State, (state: State) =>
    selectAll(state)
);

export const get<%= classify(name) %>Entities = createSelector(get<%= classify(name) %>State, (state: State) =>
    selectEntities(state)
);

export const getSelectedId = createSelector(
    get<%= classify(name) %>State,
    (state: State) => state.selectedId || ''
);

export const selectSelectedEntity = createSelector(
    get<%= classify(name) %>State,
    (state: State) => state.selectedEntity
);

export const isNewEntityButtonEnabled = createSelector(
	get<%= classify(name) %>State,
	(state: State) => state.isNewEntityButtonEnabled
);

export const select<%= classify(name) %> = createSelector(
    get<%= classify(name) %>Entities,
    getSelectedId,
    (entities, selectedId) => entities[selectedId]
);

export const select<%= classify(name) %>ById = (id: string) =>
    createSelector(get<%= classify(name) %>Entities, (<%= camelize(name) %>Entities: Dictionary<<%= classify(name) %>Entity>) => {
        return <%= camelize(name) %>Entities[id];
    });
